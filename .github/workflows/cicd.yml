name: Cinema CI/CD
on:
  push:
    branches: ["develop"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create application.yml from secret
        run: |
          cd ./infra/src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash

      - name: Grant permission to gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}

  deploy:
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - name: Docker Image Pull and Container Run
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_PORT }}
          script: |
            docker stop my-was
            docker rm my-was
            docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
            docker run -d -p 8080:8080 \
            -v /root/my-proj/resources:/app/resources \
            --name my-was ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
            
            
            
